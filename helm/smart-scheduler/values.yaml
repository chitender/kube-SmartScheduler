# Default values for smart-scheduler.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  # Image registry configuration
  registry: ghcr.io
  repository: chitender/kube-smartscheduler  # Note: repository name is lowercase for Docker compatibility
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  
  # Multi-architecture support
  platform: ""  # Leave empty for auto-detection, or specify: linux/amd64, linux/arm64
  
  # Alternative registries (uncomment to use)
  # registry: docker.io
  # repository: your-dockerhub-username/smart-scheduler

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Operator configuration
operator:
  # Enable leader election for controller manager
  leaderElection: true
  
  # Metrics configuration
  metrics:
    enabled: true
    port: 8080
    path: /metrics
    
  # Health check configuration
  health:
    enabled: true
    port: 8081
    probePath: /healthz
    readinessPath: /readyz

# Webhook configuration
webhook:
  enabled: true
  port: 9443
  certDir: /tmp/k8s-webhook-server/serving-certs
  
  # Failure policy for the webhook (Fail or Ignore)
  failurePolicy: Fail
  
  # Admission review versions
  admissionReviewVersions:
    - v1
    - v1beta1
    
  # Namespaces to exclude from webhook processing
  excludeNamespaces:
    - kube-system
    - kube-public
    - cert-manager
    - smart-scheduler-system

# Certificate management
certificates:
  # Enable cert-manager for automatic certificate management
  certManager:
    enabled: true
    issuer:
      # Create a self-signed issuer (for development)
      selfSigned: true
      # Or use an existing issuer
      # existing: letsencrypt-prod
      
  # Manual certificate configuration (if cert-manager is disabled)
  manual:
    enabled: false
    tlsCrt: ""
    tlsKey: ""
    caCrt: ""

# Service account configuration
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65532
  runAsGroup: 65532
  fsGroup: 65532

# Container security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true

# Service configuration
service:
  type: ClusterIP
  
  # Metrics service
  metrics:
    port: 8080
    targetPort: metrics
    
  # Health service  
  health:
    port: 8081
    targetPort: health
    
  # Webhook service
  webhook:
    port: 443
    targetPort: webhook

# Resource limits and requests
resources:
  limits:
    cpu: 500m
    memory: 128Mi
  requests:
    cpu: 10m
    memory: 64Mi

# Node selector for operator pod placement
nodeSelector: {}

# Tolerations for operator pod scheduling
tolerations: []

# Affinity rules for operator pod scheduling
affinity: {}

# Priority class for operator pods
priorityClassName: ""

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 1

# Horizontal Pod Autoscaler
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Monitoring and observability
monitoring:
  # Enable ServiceMonitor for Prometheus
  serviceMonitor:
    enabled: false
    namespace: ""
    labels: {}
    scrapeInterval: 30s
    scrapeTimeout: 10s
    
  # Enable PrometheusRule for alerting
  prometheusRule:
    enabled: false
    namespace: ""
    labels: {}
    rules: []

# Logging configuration
logging:
  level: info
  development: false
  encoder: json
  
# Feature flags
features:
  # Enable CRD-based policy management
  crdPolicies: true
  
  # Enable automatic rebalancing
  rebalancing: true
  
  # Enable placement drift detection
  driftDetection: true
  
  # Enable enhanced metrics collection
  enhancedMetrics: true

# RBAC configuration
rbac:
  # Create RBAC resources
  create: true
  
  # Additional cluster role rules
  additionalRules: []

# Multi-namespace support
multiNamespace:
  enabled: false
  # List of namespaces to watch (empty means all namespaces)
  watchNamespaces: []

# Custom Resource Definitions
crds:
  # Install CRDs as part of the Helm release
  install: true
  
  # Keep CRDs when uninstalling the chart
  keep: true

# Development and testing
development:
  enabled: false
  
  # Enable debug logging
  debug: false
  
  # Disable webhook for local testing
  disableWebhook: false 